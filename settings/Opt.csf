adaptCorrector<>struct<>OptAdaptCorrector<>#struct
alphaReverse<>double<>pi/2<>#scalar#double#positive#nonzero#isoff:alphaReverseAutoMode
alphaReverseAutoMode<>eval<>true<>#scalar#logical
approveManually<>eval<>false<>#scalar#logical#ison:plot#ison:display|#scalar#double#ison:plot#ison:display
bidirectional<>eval<>false<>#scalar#logical
bifurcation<>struct<>OptBifurcation<>#struct
bifRandDir<>eval<>true<>#scalar#logical
bifAdditionalTestfunction<>eval<>@(func,xSolution,xPredictor,Bifurcation,Do,Info,Initial,Is,Jacobian,Path)1<>#function_handle
bifResidual<>struct<>OptBifResidual<>#struct
breakFunction<>eval<>@(f,J,v,l,breakFunOut)aux.initialBreakFunction(f,J,v,l,breakFunOut)<>#function_handle
checkJacobian<>eval<>false<>#scalar#logical
checkResidual<>eval<>false<>#scalar#logical
checkStepSizeOptions<>eval<>true<>#scalar#logical
closedCurveDetection<>eval<>true<>#scalar#logical
corrector<>struct<>OptCorrector<>#struct#ison:corrector
correctorOrthogonalMethod<>struct<>OptCorrectorOrthogonalMethod<>#struct#ison:correctorOrthogonalMethod
correctPredictor<>eval<>true<>#scalar#logical
deflation<>eval<>true<>#scalar#logical
deflationErrorCounter<>double<>5<>#scalar#integer#positive#nonzero
diffquot<>struct<>OptDiffQuot<>#struct
direction<>eval<>sign(lEnd-lStart)*[zeros(size(var0));1]<>#scalar#pmone|#array#double#norm:1#size:[numel(var0)+1,1]
display<>eval<>true<>#scalar#logical
dpa<>eval<>false<>#scalar#logical#false|#scalar#logical#true#isoff:plot|#scalar#logical#true#ison:plot.dpa
dpaGammaVar<>eval<>false<>#scalar#logical#false|#scalar#logical#true#ison:dpa#isoff:plot|#scalar#logical#true#ison:dpa#ison:plot.dpa
dpaResidual<>function_handle<>@(v,l,g)1<>#scalar#nargin:3
dsMax<>eval<>inf<>#scalar#double#positive#nonzero|#array#positive#nonzero#double#size:[numel(var0)+1,1]#ison:enforceDsMax
dsMin<>double<>10^-9<>#scalar#double#positive#smaller:norm(opt.dsMax)
dsTol<>eval<>[0.5,1.5]<>#array#positive#double#increasing#size:[1,2]
dscale0<>eval<>ones(numel(var0)+1,1)<>#array#positive#nonzero#double#size:[numel(var0)+1,1]
dscaleMin<>double<>1e-5<>#scalar#positive#nonzero#double|#array#positive#nonzero#double#size:[numel(var0)+1,1]
enforceDsMax<>eval<>false<>#scalar#logical#ison:predictorSolver
eventUserInput<>cell<>{}<>#cell
g0<>eval<>lStart<>#scalar#double
gTarget<>eval<>lEnd<>#scalar#double
homotopy<>struct<>OptHomotopy<>#struct
homotopyErrorCounter<>double<>2<>#scalar#integer#positive#nonzero#neq:opt.deflationErrorCounter
includeReverse<>eval<>false<>#scalar#logical
initialDeflationPoints<>eval<>[]<>#double
jacobian<>eval<>false<>#scalar#logical
jacobianOut<>struct<>OptJacobianOut<>#struct
l0<>eval<>lStart<>#scalar#double
lDirFunction<>eval<>@(var,l,J)1<>#function_handle#isset:lMult0
lMult0<>double<>1<>#double#isset:lDirFunction
lTarget<>eval<>lEnd<>#scalar#double
livePlotFig<>eval<>NaN<>#scalar#isnan|#scalar#integer#positive#nonzero
maxClosedCounter<>double<>5<>#scalar#integer#positive#nonzero
maxErrorCounter<>double<>20<>#scalar#integer#positive#nonzero
maxRemoveCounter<>double<>20<>#scalar#integer#positive#nonzero
maxStepSizeChange<>double<>2<>#scalar#double#positive#larger:1
nBifSearch<>double<>10<>#scalar#integer#positive#nonzero
nIterOpt<>double<>3<>#scalar#integer#positive#nonzero
nStepMax<>eval<>inf<>#scalar#integer#positive#nonzero
optimalContractionRate<>double<>0.1<>#scalar#double#positive#nonzero#max:1
pathInfoFunction<>eval<>@(f,J,v,l)0<>#function_handle
pauseOnError<>eval<>true<>#scalar#logical
plot<>struct<>OptPlot<>#struct
plotPause<>eval<>false<>#scalar#positive#nonzero#integer|#scalar#logical
plotVarOfInterest<>eval<>NaN<>#scalar#isnan|#scalar#integer#positive#nonzero#max:numel(var0)
plotVarsIndex<>eval<>1:numel(var0)<>#array#integer#positive#nonzero#unique#max:numel(var0)#ison:plot
predictor<>struct<>OptPredictor<>#struct#ison:predictor
predictorDistance<>double<>0.5<>#scalar#double#positive#nonzero
predictorPolynomialAdaptive<>eval<>false<>#scalar#logical
predictorPolynomialFit<>double<>0<>#scalar#integer#positive
predictorPolynomialDegree<>double<>1<>#scalar#integer#positive#nonzero
predictorSolver<>eval<>false<>#scalar#logical
removeErrorCounter<>double<>6<>#scalar#integer#positive#nonzero#larger:opt.stepbackErrorCounter+1#neq:opt.homotopyErrorCounter#neq:opt.deflationErrorCounter#neq:opt.suspendContinuationErrorCounter|#scalar#integer#equals:0
reverse<>struct<>OptReverse<>#struct
scaling<>struct<>OptScaling<>#struct
solver<>struct<>OptSolver<>#struct#ison:solver
solverForce1it<>eval<>false<>#scalar#logical
solverMaxIterations<>double<>50<>#scalar#integer#positive#nonzero
solverTol<>double<>10^-10<>#scalar#double#positive#nonzero
speedOfContinuation<>double<>10<>#scalar#double#positive#nonzero
stepbackErrorCounter<>double<>3<>#scalar#integer#positive#nonzero#neq:opt.homotopyErrorCounter#neq:opt.deflationErrorCounter
stepSizeAngle<>eval<>(2/360)*(2*pi)<>#scalar#double#positive
stepSizeControl<>struct<>OptStepSizeControl<>#struct#ison:stepSizeControl
stepSizeErrorMax<>double<>0.6<>#scalar#double#positive#nonzero
stepSizeErrorPd<>eval<>[1,0]<>#array#double#positive
stepSizeEvent<>eval<>false<>#scalar#logical
stepSizeIterationsBeta<>double<>0.5<>#scalar#double#positive#nonzero#smaller:2
stepSizeExponentialWeight<>double<>4<>#scalar#double#positive#nonzero
stepSizePidParams<>eval<>[0.075,0.175,0.01]<>#array#positive#nonzero#double#size:[1,3]
stepSizePidTol<>double<>0.05<>#scalar#double#positive
stopOnBifurcation<>eval<>false<>#scalar#logical#ison:bifurcation
stopOnCrossing<>eval<>false<>#scalar#logical#ison:bifurcation
suspendContinuationErrorCounter<>double<>10<>#scalar#integer#positive#nonzero#larger:opt.stepbackErrorCounter+1#neq:opt.homotopyErrorCounter#neq:opt.deflationErrorCounter
targetTol<>double<>0<>#scalar#double#positive
timeLimit<>double<>inf<>#scalar#positive#nonzero
weightsAngleCustom<>eval<>[0.5,0.7]<>#array#positive#double#size:[1,2]
weightsAngleChange<>eval<>[0.5,0.3]<>#array#positive#double#size:[1,2]
weightsError<>eval<>[0.5,0.05,0.1,0.3,0.05]<>#array#positive#double#size:[1,5]
weightsFayezioghani<>eval<>[0.5,0.7]<>#array#positive#double#size:[1,2]
weightsMultiplicative<>eval<>[0.3,0.05,0.05,0.3,0.05]<>#array#positive#double#size:[1,5]
weightsSzyszkowski<>eval<>[0.5,0.7]<>#array#positive#double#size:[1,2]
weightsYoon<>double<>0.5<>#scalar#double#positive
xTarget<>eval<>inf(numel(var0)+1,1)<>#array#double#size:[numel(var0)+1,1]