%% path continuation - aux.initializeStructsAndClasses
%
%   Institute of Dynamics and Vibration Research
%   Leibniz University Hannover
%   16.09.2021 - Alwin FÃ¶rster
%   06.08.2022 - Anna Lefken
%
function [Bifurcation,Counter,Do,Info,InfoOut,Initial,Is,Path,Plot,Remove,Solver] = initializeStructsAndClasses(var0,lStart,lEnd,ds0,Opt,OptIsSet,StepsizeOptions)
    %% Bifurcation
    %
    Bifurcation = struct('bif',zeros(2,0),...
                         'dirs',{cell(1,2)},...
                         'flag',0,...
                         'scaling',[]);
    %
    %% Counter
    %
    Counter = struct('bifStepsizeRed',0,...
                     'catch',0,...
                     'catchOld',0,...
                     'closedCurve',0,...
                     'error',0,...
                     'event',0,...
                     'loop',0,...
                     'remove',0,...
                     'step',0,...
                     'validStepback',0);
    %
    %% Do
    %
    Do = struct('changeCorrector',false,...
                'continuation',false,...
                'convergeToTarget',false,...
                'convergeToxTarget',false,...
                'deflate',false,...
                'homotopy',false,...
                'loop',false,...
                'remove',false,...
                'stepback',false,...
                'stepbackManually',false,...
                'stopManually',false,...
                'suspend',false);
	%
    %% Info
    %
    Info = struct('biDirRuns',0,...
                  'validJacobian',true,...
                  'ds0',ds0,...
                  'exitflag',-1,...
                  'exitMsg','',...
                  'nv',numel(var0),...
                  'lStart',lStart,...
                  'lEnd',lEnd,...
				  't0',tic,...
                  'var0',var0,...
                  'finalSolutionPoint',false);
	%
    %% InfoOut
    %
    InfoOut = struct('numberOfSteps',0,...
                     'numberOfInvalidPoints',0);
    %
    %% Initial
    %
    Initial = struct('dsMax',Opt.dsMax,...
                     'dsMin',Opt.dsMin,...
                     'lStart',lStart,...
                     'lEnd',lEnd);
    %
    %% Is
    %
    Is = struct('catch',false,...
                'currentJacobian',false,...
                'reverse',false,...
                'valid',false);
    %
    %% Path
    %
    Path = continuation.Path(Info.nv,1,Opt,OptIsSet,StepsizeOptions);
	%
    %% Plot
    %
    if (aux.ison(Opt.plot) && ~Opt.plot.detail) || ~aux.ison(Opt.plot)
        Plot = struct('fig',[],...
                      'pl',[],...
                      'plCurr',[]);
    else
        Plot = struct('fig',[],...
                      'pl',[],...
                      'plCor',[],...
                      'plCorAssist',[],...
                      'plCurr',[],...
                      'plDet',[],...
                      'plIt',[],...
                      'plPre',[],...
                      'plS',[]);
    end
	%
    %% Remove
    %
    Remove = struct('ds',NaN,...
                    's',NaN);
    %
    %% Solver
    %
    [solver,predictorSolver,numJacSolver,defaultSolverOutput] = continuation.solver(Opt,StepsizeOptions.rateOfContraction);
    Solver = struct('defaultOutput',defaultSolverOutput,...
                    'exitflag',-2,...
                    'jacobian',[],...
                    'main',solver,...
                    'numJac',numJacSolver,...
                    'output',defaultSolverOutput,...
                    'predictor',predictorSolver,...
                    'temp',[]);
    %
end